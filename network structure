docker run -it -d --name ubuntu_net01 ubuntu //브릿지 환경으로 컨테이너가 만들어진 것
docker run -it -d --name ubuntu_net02 ubuntu
docker inspect ubuntu_net01 | grep IPAddress //IP주소가 172.17.0.7로 배정된 것을 확인할 수 있음
docker inspect ubuntu_net02 | grep IPAddress //172.17.0.8으로 배정
docker exec -it ubuntu_net01 bash //컨테이너 안으로 들어감
  apt update //업데이트해줘야 ifconfig 명령어를 실행할 수 있음
  ifconfig // =>docker exec ubuntu_net01 ifconfig와 같은 명령어, 기본적인 네트워크 정보를 확인할 수 있음

docker run -d --name=nginx_webserver --net=host nginx //호스트이기 때문에 192 대역으로 잡혀있음, nginx는 80포트로 동작을 함, 80포트로 연결이 될 것. 

docker network create web-net01 //브릿지로 네트워크를 하나 만들어준 것(ls를 해서 확인할 수 있음), 서브넷 개념으로 이해할 수 있음.
//ifconfig나 inspect로 자세한 내용을 확인할 수 있음.//
docker run -it -d --name=web01 --net=web-net01 nginx //브릿지를 네트워크로 썼기 때문에 대역이 172.17.으로 잡힐 것
---------------------------------------------------------
docker run -it -d --name=nginx_net01 nginx
docker run -it -d --name=nginx_net01 nginx
docker ps //두 컨테이너가 만들어진 것을 확인할 수 있음
docker inspect nginx | grep IPAddress //IP 주소확인

docker run -d --name=nginx_web03 -p 8888:80 nginx //기본적으로 브릿지에 연결되어 웹에서 확인할 수 있음(localhost:8888)
docker run -d --name=nginx_web04 --net=host nginx //호스트로 연결해준 것.(localhost:80)
